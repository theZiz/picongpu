# Copyright 2017 Axel Huebl
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      docs/TBG_macros.cfg
##


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="12:00:00"

TBG_gpu_x=8
TBG_gpu_y=2
TBG_gpu_z=4

TBG_gridSize="-g 512 512 512"
TBG_steps="-s 5500"

TBG_periodic="--periodic 0 0 0"

TBG_START_TS=500
TBG_WIDTH=1024
TBG_HEIGHT=768

#################################
## Section: Optional Variables ##
#################################

TBG_isaac="--isaac.period 1 --isaac.name foil --isaac.url hypnos5 --isaac.quality 90 --isaac.port 12460 --isaac.directPause true --isaac.width !TBG_WIDTH --isaac.height !TBG_HEIGHT"
# futher options:
#   URL of the server
#     --isaac.url URL
#   Number from 1 to 100 decribing the quality of the transceived jpeg image.
#   Smaller values are faster sent, but of lower quality
#     --isaac.quality QUALITY
#   Resolution of the rendered image. Default is 1024x768
#     --isaac.width WIDTH
#     --isaac.height HEIGHT
#   Pausing directly after the start of the simulation
#     --isaac.directPause

# --checkpoint.restart.directory /path/to/simOutput/checkpoints

if [ $TBG_gpu_x -eq 8 ]; then
    TBG_restart="--checkpoint.restart \
                 --checkpoint.restart.step !TBG_START_TS \
                 --checkpoint.restart.backend adios \
                 --checkpoint.restart.loop 5000"
else
    TBG_restart="--checkpoint.restart.loop 5000"
fi

TBG_plugins="!TBG_isaac !TBG_restart"

#################################
## Section: Program Parameters ##
#################################

TBG_devices="-d !TBG_gpu_x !TBG_gpu_y !TBG_gpu_z"

TBG_programParams="!TBG_devices      \
                   !TBG_gridSize     \
                   !TBG_steps        \
                   !TBG_periodic     \
                   !TBG_plugins      \
                   --versionOnce"

# TOTAL number of GPUs
TBG_tasks="$(( TBG_gpu_x * TBG_gpu_y * TBG_gpu_z ))"

"$TBG_cfgPath"/submitAction.sh
